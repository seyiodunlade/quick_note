# Generated by Django 3.1.1 on 2021-01-22 01:25

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
from django.utils.timezone import utc


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='MyUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(max_length=25, unique=True)),
                ('first_name', models.CharField(max_length=25)),
                ('last_name', models.CharField(max_length=25)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email_address')),
                ('date_joined', models.DateField()),
                ('country', models.CharField(max_length=40)),
                ('is_active', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserNotes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('header', models.CharField(max_length=120)),
                ('content', models.TextField()),
                ('category', models.CharField(max_length=30)),
                ('date_created', models.DateField(default=datetime.datetime(2021, 1, 22, 1, 25, 26, 874602, tzinfo=utc))),
                ('is_private', models.BooleanField(default=False)),
                ('is_shared', models.BooleanField(default=False)),
                ('shared_visits', models.IntegerField(default=0)),
                ('was_downloaded', models.BooleanField(default=False)),
                ('download_count', models.IntegerField(default=0)),
                ('last_edit', models.DateField(default=datetime.datetime(2021, 1, 22, 1, 25, 26, 874602, tzinfo=utc), verbose_name='Last Edited date')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Categories',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category1', models.CharField(default='personal', max_length=30)),
                ('category2', models.CharField(default='work', max_length=30)),
                ('category3', models.CharField(default='education', max_length=30)),
                ('category4', models.CharField(default='others', max_length=30)),
                ('category5', models.CharField(blank=True, max_length=30)),
                ('category6', models.CharField(blank=True, max_length=30)),
                ('category7', models.CharField(blank=True, max_length=30)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
